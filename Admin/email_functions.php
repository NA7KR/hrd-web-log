<?php
/*
Copyright Â© 2024 NA7KR Kevin Roberts. All rights reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
 */

// Function to send email

function sendEmail( $testing, $html, $COL_PRIMARY_KEY, $COL_EMAIL, $call, $COL_TIME_ON, $COL_BAND, $freq, $COL_MODE, $rst, $COL_RST_SENT, $COL_MY_RIG, $COL_ANTENNA, $qsl_template, $qsltxt, $qsl_c_font_color, $qsl_c_font, $qsl_c_font_size, $qsl_c_font_aa, $qsl_callsign_center_gravity, $qsl_callsign_horiz_offset, $qsl_callsign_vert_offset, $qsl_font_color, $qsl_font, $qsl_font_size, $qsl_font_aa, $qsl_qso_center_gravity, $qsl_horiz_offset, $qsl_vert_offset, $senderemail, $emailserver, $emailpost, $emailpassword, $site_url, $callsign, $name,$db_server, $db_user, $db_pass, $db_db) 
{
    include("../qslconf.php"); 
 
    
    // Create database connection
    $conn = new mysqli($db_server, $db_user, $db_pass, $db_db); // Establish database connection
    if ($conn->connect_error) 
    { // Check for connection errors
        die("Connection failed: " . $conn->connect_error); // Display error message and terminate script
    }
    try
    {
        $mail = new PHPMailerPro(); // Create a new PHPMailerPro instance

        if ( $testing == 'False') // Check if not in testing mode
        {
            $recipient =  [$COL_EMAIL=>$call]; // Set recipient email and name
        }
        else
        {
            $recipient =  ["kevin@na7kr.us"=>'$call']; // Set testing recipient email and name
        }

        $sender    = [$senderemail=>'QSL CARD']; // Set sender email and name
        $mail->SetSender($sender); // Set the sender

        $mail->AddRecipient($recipient); // Add recipient

        $mail->subject     = "Digital QSL card from " . $callsign . " to ". $call; // Set email subject

        // Construct email body
        $body = "Dear " . $call . PHP_EOL;
        $body .= "Thanks for the recent 2-way contact" . PHP_EOL;
        $body .= "Confirming QSO with NA7KR" . PHP_EOL;
        $body .= "UTC $COL_TIME_ON" . PHP_EOL;
        $body .= "Band $COL_BAND" . PHP_EOL;
        $body .= "Frequency $freq" . PHP_EOL;
        $body .= "Mode $COL_MODE" . PHP_EOL;
        $body .= "RST Received $rst" . PHP_EOL;
        $body .= "RST Sent $COL_RST_SENT" . PHP_EOL . PHP_EOL;
        $body .= "Please find attached my QSL card." .PHP_EOL;
        $body .= "If you would like a physical QSL card via mail either direct or through the bureau let me know please.". PHP_EOL; 
        $body .= "I will upload all of my logs to LoTW, QRZ and eQSL. ". PHP_EOL;
        $body .= "Currently I use Ham Radio Deluxe as my logging program, Station is: ". PHP_EOL;
        $body .= "Rig " . $COL_MY_RIG .  " and Antenna " . $COL_ANTENNA  . "." . PHP_EOL;
        $body .= "This image was generated by a custom app I wrote pulling the information from HRD database.". PHP_EOL . PHP_EOL;
        $body .= "I hope to meet you again soon on bands.". PHP_EOL . PHP_EOL;
        $body .= "73,  $name, $callsign". PHP_EOL;
        $body .= "Note: If you believe this message was not intended for you or if you prefer not to receive\n";
        $body .= "digital QSL Cards/Confirmations, you have the option to unsubscribe from future emails at $site_url/\n\n";
        $body .= "In case you unsubscribe or if a card is missing, you can download it from the same link.\n";

        // Remove slashes and replace with dashes in the file name
        $call = str_replace('/', '-', $call);

        // Ensure secure file name by only allowing alphanumeric characters, dashes, and underscores
        $safe_call = preg_replace('/[^a-zA-Z0-9_-]/', '', $call);

        // Add attachment
        $mail->AddAttachment("../cards/$call-$COL_PRIMARY_KEY.jpg" , "$safe_call.jpg" );

        $mail->messageText = $body . PHP_EOL;

        $mail->smtpHost     = $emailserver; // Set SMTP host
        $mail->smtpPort     = $emailpost;   // Set SMTP port
        $mail->smtpUsername = $senderemail; // Set SMTP username
        $mail->smtpPassword = $emailpassword; // Set SMTP password

        if ( $testing == 'False') // Check if not in testing mode
        {
            if ($html == 'True') // Check if HTML email is enabled
            {
                if ($mail->Send('smtp')) // Send email
                {
                    echo "Email sent successfully.<br>"; // Output success message
                    $qsl_update = "UPDATE `$db_Table_email` SET `COL_SENT` = 'yes' WHERE `$db_Table_email`.`$db_COL_PRIMARY_KEY` = $COL_PRIMARY_KEY;"; // SQL query to update sent status
                    $resupdate = $conn->query($qsl_update); // Execute SQL query
                } 
                else 
                {
                    echo "Mailer Error: " . $mail->ErrorInfo; // Output error message
                }

                echo  $call ."<br><br>"; // Output recipient
            }
            else
            {
                if ($mail->Send('smtp')) // Send email
                {
                    echo "Email sent successfully." . PHP_EOL; // Output success message
                    $qsl_update = "UPDATE `$db_Table_email` SET `COL_SENT` = 'yes' WHERE `$db_Table_email`.`$db_COL_PRIMARY_KEY` = $COL_PRIMARY_KEY;"; // SQL query to update sent status
                    $resupdate = $conn->query($qsl_update); // Execute SQL query
                } 
                else 
                {
                    echo "Mailer Error: " . $mail->ErrorInfo; // Output error message
                }

                echo  $call . PHP_EOL; // Output recipient
            }
        }
        else // If in testing mode
        {
            $mail->Send('smtp'); // Send email

            if ($html == 'True') // Check if HTML email is enabled
            {
                echo "testing<br>"; // Output testing message
                echo  $call ."<br><br>"; // Output recipient
            }
            else
            {
                echo  $call . PHP_EOL; // Output recipient
            }
        }
    }
    catch (Exception $e) // Catch any exceptions
    {
        echo $e->errorMessage(); // Output error message
        echo  $call ."<br><br>"; // Output recipient
    }
}
?>
